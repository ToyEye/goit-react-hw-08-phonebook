{"version":3,"file":"static/js/798.8a42f48f.chunk.js","mappings":"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","sources":["Сomponents/Form/Contact-Form.jsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","Сomponents/ContactItem/ContactItem.js","redux/contacts/contact-selector.js","Сomponents/ContactList/ContactList.styled.js","Сomponents/Filter/Filter.js","Views/Contacts-page.jsx","Сomponents/FormComponents/FormComponents.styled.js","Сomponents/Section/Section.styled.js"],"sourcesContent":["import React, { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { Button } from '@mui/material';\nimport { InputType, InputText, FormStyled } from '../FormComponents';\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from '../../redux/contacts/contactsApi.js';\nimport { TextField } from '@mui/material';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact] = useAddContactMutation();\n  const { data } = useFetchContactsQuery();\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    if (\n      data.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n    ) {\n      toast.error('Contact exists!');\n      return;\n    } else {\n      toast.success('Contact added');\n      await createContact({ name, number });\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <InputType>\n        <InputText>Name</InputText>\n        <TextField\n          label=\"Enter name\"\n          variant=\"outlined\"\n          size=\"small\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </InputType>\n      <InputType>\n        <InputText>Number</InputText>\n        <TextField\n          label=\"Enter number\"\n          variant=\"outlined\"\n          size=\"small\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </InputType>\n      <Button variant=\"contained\" size=\"medium\" type=\"submit\">\n        Add contact\n      </Button>\n    </FormStyled>\n  );\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Button } from '@mui/material';\nimport { Card, CardContent } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from '../../redux/contacts/contactsApi';\nimport toast from 'react-hot-toast';\n\nconst ContactItemStyled = styled.li`\n  color: black;\n  margin-right: 15px;\n  margin-bottom: 15px;\n\n  :nth-last-of-type(-n + 3) {\n    margin-bottom: 0;\n  }\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nconst ContactName = styled.p`\n  color: black;\n  font-size: 18px;\n  margin-bottom: 15px;\n`;\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  const handleDelete = id => {\n    deleteContact(id);\n    toast.success('Contact deleted');\n  };\n\n  return (\n    <ContactItemStyled key={id} id={id}>\n      <Card sx={{ minWidth: 275 }}>\n        <CardContent>\n          <ContactName>\n            {name} : {number}\n          </ContactName>\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            onClick={() => handleDelete(id)}\n            type=\"button\"\n          >\n            Delete\n          </Button>\n        </CardContent>\n      </Card>\n    </ContactItemStyled>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","export const getFilter = state => state.contacts.filter;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { ContactItem } from '../ContactItem';\nimport { useFetchContactsQuery } from '../../redux/contacts/contactsApi';\nimport { LoaderSimbol } from '../Loader/';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contact-selector';\n\nconst ContactStyledList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n\n  background-color: #0c355e;\n`;\n\nconst ContactList = () => {\n  const filter = useSelector(getFilter).toLowerCase();\n\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n\n  const getFilteredContacts = contacts =>\n    contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  const filtered = contacts ? getFilteredContacts(contacts) : [];\n\n  return (\n    <ContactStyledList>\n      {isFetching && <LoaderSimbol />}\n      {filtered &&\n        filtered.map(({ name, id, number }) => (\n          <ContactItem key={id} name={name} id={id} number={number} />\n        ))}\n    </ContactStyledList>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { InputType, InputText } from '../FormComponents';\nimport actions from '../../redux/contacts/contact-action';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contact-selector';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handler = evt => {\n    dispatch(actions.filterChange(evt.target.value));\n  };\n\n  return (\n    <InputType>\n      <InputText>Find contact by name</InputText>\n      <TextField\n        label=\"Filter\"\n        variant=\"outlined\"\n        size=\"small\"\n        type=\"text\"\n        value={filter}\n        onChange={handler}\n      />\n    </InputType>\n  );\n};\n\nexport default Filter;\n","import { Typography } from '@mui/material';\n\nimport ContactForm from '../Сomponents/Form/Contact-Form';\nimport { Section } from '../Сomponents/Section';\nimport ContactList from '../Сomponents/ContactList';\nimport Filter from '../Сomponents/Filter';\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <Section>\n        <Typography align=\"center\" variant=\"h3\" gutterBottom component=\"h1\">\n          Phonebook\n        </Typography>\n        <ContactForm />\n      </Section>\n      <Section>\n        <Typography align=\"center\" variant=\"h3\" gutterBottom component=\"h1\">\n          Contacts\n        </Typography>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nconst FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  width: 450px;\n  padding: 10px 15px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nconst InputType = styled.label`\n  margin-bottom: 10px;\n  &:hover,\n  &:active {\n    border-color: #7cb1ec;\n  }\n`;\n\nconst InputText = styled.p`\n  margin-bottom: 5px;\n`;\n\nexport { InputType, InputText, FormStyled };\n","import styled from '@emotion/styled';\n\nconst Section = styled.section`\n  margin-top: 25px;\n  margin-bottom: 25px;\n  text-align: center;\n`;\n\nexport { Section };\n"],"names":["Form","useState","name","setName","number","setNumber","useAddContactMutation","createContact","data","useFetchContactsQuery","handleChange","evt","target","value","handleSubmit","preventDefault","find","contact","toLowerCase","toast","reset","onSubmit","TextField","label","variant","size","type","pattern","title","required","onChange","Button","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","ContactItemStyled","ContactName","ContactItem","id","useDeleteContactMutation","deleteContact","sx","minWidth","onClick","handleDelete","getFilter","state","contacts","filter","ContactStyledList","useSelector","isFetching","filtered","includes","getFilteredContacts","Loader","map","dispatch","useDispatch","actions","ContactsPage","Section","Typography","align","gutterBottom","FormStyled","InputType","InputText"],"sourceRoot":""}